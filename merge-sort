#include<iostream>

int N;

int arr[N];
int sorted[N];

void merge(int start, int end) {
    int mid = (start + end) / 2;
    int i = start, j = mid + 1, k = start;
    while (i <= mid && j <= end) {
        if (arr[i] <= arr[j])
            sorted[k++] = arr[i++];
        else
            sorted[k++] = arr[j++];
    }
    while (i <= mid)
        sorted[k++] = arr[i++];
    while (j <= end)
        sorted[k++] = arr[j++];

    for (int i = start; i <= end; i++) {
        arr[i] = sorted[i];
    }
}

void merge_sort(int start, int end) {
    if (start < end) {
        int mid = (start + end) / 2;
        merge_sort(start, mid);
        merge_sort(mid + 1, end);
        merge(start, end);
    }
}

int main() {
  
    merge_sort(0, N - 1);

}
